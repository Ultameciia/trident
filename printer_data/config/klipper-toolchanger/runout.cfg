############Example Filament Runout Sensor##################
#[filament_switch_sensor tool0_sensor]
#pause_on_runout: False
#switch_pin: ^PA3 # Adjust pin for Tool 0
#runout_gcode:
#    M117 Filament runout on T0!
#    G91 ; Relative positioning
#    G1 E-5 F1800 ; Retract filament
#    G90 ; Absolute positioning
#    RUNOUT_TOOL_CHANGE TOOL_NUMBER=0
############################################################
[gcode_macro _USER_VARS]
gcode:
variable_spoolman_ip_port: "http://192.168.1.100:7912" # Adjust with your Spoolman IP and Port
variable_all_tool_numbers: [0, 1, 2, 3]                # Adjust this as you add tools. If you have two then just do [0, 1] etc etc

[gcode_macro SET_ACTIVE_TOOLHEAD_SPOOL]
description: Sets the active Spoolman ID for a given tool number.
variable_spool_ids: {} 
gcode:
    {% set tool_number = params.TOOL_NUMBER|int %}
    {% set spool_id = params.ID|int %}

    {% if tool_number is defined %}
        {% set new_spool_ids = spool_ids.copy() %} 
        {% do new_spool_ids.update({tool_number: spool_id}) %}
        SET_GCODE_VARIABLE MACRO=SET_ACTIVE_TOOLHEAD_SPOOL VARIABLE=spool_ids VALUE="{new_spool_ids}"
        M117 Spool ID for Tool {tool_number} set to: {spool_id}
    {% else %}
        M117 Error: TOOL_NUMBER not specified for SET_ACTIVE_TOOLHEAD_SPOOL.
    {% endif %}
    SAVE_VARIABLES

##############Examples for Filament Start GCode##############
#SET_ACTIVE_TOOLHEAD_SPOOL TOOL_NUMBER=0 ID=12345  #In the filament profile for the filament loaded onto T0
#SET_ACTIVE_TOOLHEAD_SPOOL TOOL_NUMBER=1 ID=67890  #In the filament profile for the filament loaded onto T1
#SET_ACTIVE_TOOLHEAD_SPOOL TOOL_NUMBER=2 ID=11223  #In the filament profile for the filament loaded onto T2
#SET_ACTIVE_TOOLHEAD_SPOOL TOOL_NUMBER=3 ID=44556  #In the filament profile for the filament loaded onto T3
#############################################################

[gcode_macro RUNOUT_TOOL_CHANGE]
description: Handles automatic tool change on filament runout for any number of Klipper-Toolchanger toolheads, with Spoolman validation.
gcode:
    {% set ran_out_tool_number = params.TOOL_NUMBER|int %}
    {% set current_tool_name = printer.toolchanger.current_tool.name | default("") %}
    {% set current_tool_number = current_tool_name | int %}

    # Access variables from _USER_VARS macro
    {% set SPOOLMAN_URL = printer.gcode_macro._USER_VARS.spoolman_ip_port %}
    {% set ALL_TOOLS = printer.gcode_macro._USER_VARS.all_tool_numbers %}
    {% set PARK_Z = printer.gcode_macro._USER_VARS.park_z_lift %}
    {% set PRINTER_X_MAX = printer.gcode_macro._USER_VARS.printer_x_max %}
    {% set PRINTER_Y_MAX = printer.gcode_macro._USER_VARS.printer_y_max %}

    M117 Filament runout detected on Tool {ran_out_tool_number}.
    M117 Currently active tool: {current_tool_number}.

    {% if ran_out_tool_number not in ALL_TOOLS %}
        M117 ERROR: Detected runout on unknown tool {ran_out_tool_number}.
        RESPOND MSG="ERROR: Filament runout on unknown tool {ran_out_tool_number}. Please check config."
        PAUSE
        RETURN
    {% endif %}

    # Query Spoolman for filament details of the ran-out tool
    {% set ran_out_spool_id = printer.gcode_macro.SET_ACTIVE_TOOLHEAD_SPOOL.spool_ids[ran_out_tool_number] | default(-1) %}
    {% set ran_out_spool_data = {} %}

    {% if ran_out_spool_id != -1 %}
        {% set ran_out_spool_response = action_call_remote_method("http_request",
            http_url=SPOOLMAN_URL ~ "/api/v1/spool/" ~ ran_out_spool_id,
            http_method="GET") %}
        {% set ran_out_spool_data = ran_out_spool_response.json | fromjson %}
    {% endif %}

    {% if ran_out_spool_data.filament is defined %}
        {% set ran_out_color = ran_out_spool_data.filament.color %}
        {% set ran_out_material = ran_out_spool_data.filament.material %}
        M117 Ran out on Tool {ran_out_tool_number} ({ran_out_material} {ran_out_color}).

        # Find the next available toolhead with matching filament
        {% set next_tool_found = False %}
        {% set target_tool_number = -1 %}

        {% set start_index = ALL_TOOLS.index(ran_out_tool_number) %}
        {% for i in range(ALL_TOOLS | length) %}
            {% set tool_idx = (start_index + i + 1) % (ALL_TOOLS | length) %}
            {% set potential_target_tool_number = ALL_TOOLS[tool_idx] %}

            {% if potential_target_tool_number == ran_out_tool_number %}
                {% continue %}
            {% endif %}

            M117 Checking Tool {potential_target_tool_number}...

            {% set target_spool_id = printer.gcode_macro.SET_ACTIVE_TOOLHEAD_SPOOL.spool_ids[potential_target_tool_number] | default(-1) %}
            {% set target_spool_data = {} %}

            {% if target_spool_id != -1 %}
                {% set target_spool_response = action_call_remote_method("http_request",
                    http_url=SPOOLMAN_URL ~ "/api/v1/spool/" ~ target_spool_id,
                    http_method="GET") %}
                {% set target_spool_data = target_spool_response.json | fromjson %}
            {% endif %}

            {% if target_spool_data.filament is defined %}
                {% set target_color = target_spool_data.filament.color %}
                {% set target_material = target_spool_data.filament.material %}
                M117   Potential target: Tool {potential_target_tool_number} ({target_material} {target_color}).

                {% if ran_out_color == target_color and ran_out_material == target_material %}
                    {% set target_tool_number = potential_target_tool_number %}
                    {% set next_tool_found = True %}
                    {% break %}
                {% endif %}
            {% else %}
                M117   Warning: No valid Spoolman data for Tool {potential_target_tool_number}. Skipping.
            {% endif %}
        {% endfor %}

        {% if next_tool_found %}
            M117 Matching filament found on Tool {target_tool_number}. Switching tool.
            T{target_tool_number}
            M117 Switched to Tool {target_tool_number}.
            M117 Tool change complete. Resuming print.
        {% else %}
            M117 ERROR: No matching filament found on any other toolhead. Manual intervention required.
            RESPOND MSG="ERROR: No matching filament found. Ran out on Tool {ran_out_tool_number} ({ran_out_material} {ran_out_color})."
            PAUSE
        {% endif %}
    {% else %}
        M117 ERROR: Could not retrieve Spoolman data for Tool {ran_out_tool_number}. Manual intervention required.
        RESPOND MSG="ERROR: Failed to get Spoolman data for Tool {ran_out_tool_number}. Check Spool ID and Spoolman server."
        PAUSE
    {% endif %}